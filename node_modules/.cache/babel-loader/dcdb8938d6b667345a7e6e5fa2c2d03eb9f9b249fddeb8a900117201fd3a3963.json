{"ast":null,"code":"var _jsxFileName = \"D:\\\\ArunLearnings\\\\React Js\\\\movies app\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport InputForm from \"./components/InputForm\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const addMovieHandler = data => {\n    console.log(data);\n  };\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n  const fetchMoviesHandler = async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const rawData = await fetch(\"https://swapi.dev/api/films/\");\n      if (!rawData.ok) {\n        setError(\"Something went wrong!\");\n        throw new Error(\"Something went wrong!\");\n      }\n      const response = await rawData.json();\n      const myMoviesList = response.results.map(item => {\n        return {\n          title: item.title,\n          releaseDate: item.release_date,\n          openingText: item.opening_crawl\n        };\n      });\n      setMovies(myMoviesList);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      onAddMovie: addMovieHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 45\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 57\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gvvaxtNEH69eVRFSOgl7uh+ZsGU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MoviesList","InputForm","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","addMovieHandler","data","console","log","fetchMoviesHandler","rawData","fetch","ok","Error","response","json","myMoviesList","results","map","item","title","releaseDate","release_date","openingText","opening_crawl","err","message","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["D:/ArunLearnings/React Js/movies app/01-starting-project/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport InputForm from \"./components/InputForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const addMovieHandler = (data)=>{\n    console.log(data)\n  }\n  useEffect(()=>{\n    fetchMoviesHandler()\n  },[])\n  const fetchMoviesHandler = async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const rawData = await fetch(\"https://swapi.dev/api/films/\");\n      if (!rawData.ok) {\n        setError(\"Something went wrong!\");\n        throw new Error(\"Something went wrong!\");\n      }\n      const response = await rawData.json();\n      const myMoviesList = response.results.map((item) => {\n        return {\n          title: item.title,\n          releaseDate: item.release_date,\n          openingText: item.opening_crawl,\n        };\n      });\n      setMovies(myMoviesList);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <React.Fragment>\n      <InputForm onAddMovie={addMovieHandler}/>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && movies.length === 0 && !error && <p>No movies found</p>}\n        {error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,eAAe,GAAIC,IAAI,IAAG;IAC9BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC;EACDd,SAAS,CAAC,MAAI;IACZiB,kBAAkB,EAAE;EACtB,CAAC,EAAC,EAAE,CAAC;EACL,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCL,QAAQ,CAAC,IAAI,CAAC;IACdF,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMQ,OAAO,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC3D,IAAI,CAACD,OAAO,CAACE,EAAE,EAAE;QACfR,QAAQ,CAAC,uBAAuB,CAAC;QACjC,MAAM,IAAIS,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAI,EAAE;MACrC,MAAMC,YAAY,GAAGF,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAEC,IAAI,IAAK;QAClD,OAAO;UACLC,KAAK,EAAED,IAAI,CAACC,KAAK;UACjBC,WAAW,EAAEF,IAAI,CAACG,YAAY;UAC9BC,WAAW,EAAEJ,IAAI,CAACK;QACpB,CAAC;MACH,CAAC,CAAC;MACFxB,SAAS,CAACgB,YAAY,CAAC;IACzB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZrB,QAAQ,CAACqB,GAAG,CAACC,OAAO,CAAC;IACvB;IACAxB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA,CAACN,KAAK,CAACqC,QAAQ;IAAAC,QAAA,gBACbhC,OAAA,CAACF,SAAS;MAACmC,UAAU,EAAExB;IAAgB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACzCrC,OAAA;MAAAgC,QAAA,eACEhC,OAAA;QAAQsC,OAAO,EAAEzB,kBAAmB;QAAAmB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD,eACVrC,OAAA;MAAAgC,QAAA,GACG,CAAC3B,SAAS,IAAIF,MAAM,CAACoC,MAAM,GAAG,CAAC,iBAAIvC,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACjEhC,SAAS,iBAAIL,OAAA;QAAAgC,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EAC9B,CAAChC,SAAS,IAAIF,MAAM,CAACoC,MAAM,KAAK,CAAC,IAAI,CAAChC,KAAK,iBAAIP,OAAA;QAAAgC,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EACrE9B,KAAK,iBAAIP,OAAA;QAAAgC,QAAA,EAAIzB;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAErB;AAACnC,EAAA,CAhDQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}